{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "LogicAppLocation": {
      "type": "string",
      "minLength": 1,
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "uaecentral",
        "uaenorth",
        "southafricanorth",
        "southafricawest",
        "switzerlandnorth",
        "switzerlandwest",
        "germanynorth",
        "germanywestcentral",
        "norwayeast",
        "brazilsoutheast"
      ],
      "defaultValue": "northeurope"
    },
    "LogicAppName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "IB-EventGridSubscriberLogicApp-t"
    },
    "azuretables_1_Connection_Name": {
      "type": "string",
      "defaultValue": "azuretables-1"
    },
    "azuretables_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "storageCon1"
    },
    "azuretables_1_storageaccount": {
      "type": "string",
      "metadata": {
        "description": "The name of your storage account"
      },
      "defaultValue": "ibsupstorageacc"
    },
    "azuretables_1_sharedkey": {
      "type": "securestring",
      "metadata": {
        "description": "The shared storage key of your storage account"
      }
    },
    "azuretables_1_privacySetting": {
      "type": "string",
      "metadata": {
        "description": "Privacy Setting"
      },
      "allowedValues": [
        "None",
        "Private",
        "Organizational",
        "Public"
      ]
    },
    "servicebus_1_Connection_Name": {
      "type": "string",
      "defaultValue": "servicebus-1"
    },
    "servicebus_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "busCon1"
    },
    "servicebus_1_connectionString": {
      "type": "securestring",
      "metadata": {
        "description": "Azure Service Bus Connection String"
      }
    },
    "azureeventgrid_1_Connection_Name": {
      "type": "string",
      "defaultValue": "azureeventgrid-1"
    },
    "azureeventgrid_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "christian.rudolphi@integrationsbolaget.se"
    },
    "serviceBusTopic": {
      "type": "string"
    },
    "serviceBusTopicSubscriber": {
      "type": "string"
    },
    "storageTable": {
      "type": "string"
    },
    "serviceBusEventGridSystemTopicPath": {
      "type": "string"
    }
  },
  "variables": {},
  "resources": [
    {
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/schemas/2016-06-01/Microsoft.Logic.json",
          "actions": {
            "Get_messages_from_a_topic_subscription_(peek-lock)": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['servicebus']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/@{encodeURIComponent(encodeURIComponent(parameters('$connections')['servicebus']['serviceBusTopic']))}/subscriptions/@{encodeURIComponent(parameters('$connections')['servicebus']['serviceBusTopicSubscriber'])}/messages/batch/peek",
                "queries": {
                  "maxMessageCount": 20,
                  "subscriptionType": "Main",
                  "sessionId": ""
                }
              },
              "runAfter": {}
            },
            "For_each": {
              "type": "Foreach",
              "foreach": "@body('Get_messages_from_a_topic_subscription_(peek-lock)')",
              "actions": {
                "Complete_the_message_in_a_topic_subscription": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                      }
                    },
                    "method": "delete",
                    "path": "/@{encodeURIComponent(encodeURIComponent(parameters('$connections')['servicebus']['serviceBusTopic']))}/subscriptions/@{encodeURIComponent(parameters('$connections')['servicebus']['serviceBusTopicSubscriber'])}/messages/complete",
                    "queries": {
                      "lockToken": "@items('For_each')?['LockToken']",
                      "subscriptionType": "Main",
                      "sessionId": ""
                    }
                  },
                  "runAfter": {}
                },
                "For_each_2": {
                  "type": "Foreach",
                  "foreach": "@json(decodeBase64(items('For_each')['ContentData']))",
                  "actions": {
                    "Insert_Entity": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuretables_2']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": {
                          "Grad": "@items('For_each_2')['Grad']",
                          "Nederbörd": "@items('For_each_2')['Nederbörd']",
                          "PartitionKey": "@items('For_each_2')['Källa']",
                          "RowKey": "@guid()",
                          "Tid": "@convertToUtc(items('For_each_2')['Tid'], 'W. Europe Standard Time', 's')",
                          "Vindstyrka": "@items('For_each_2')['Vindstyrka']"
                        },
                        "path": "/Tables/@{encodeURIComponent(parameters('$connections')['azuretables_2']['storageTable'])}/entities"
                      },
                      "runAfter": {}
                    }
                  },
                  "runAfter": {
                    "Complete_the_message_in_a_topic_subscription": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {
                "Get_messages_from_a_topic_subscription_(peek-lock)": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_resource_event_occurs": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureeventgrid_1']['connectionId']"
                  }
                },
                "body": {
                  "properties": {
                    "topic": "@parameters('$connections')['servicebus']['serviceBusEventGridSystemTopicPath']",
                    "destination": {
                      "endpointType": "webhook",
                      "properties": {
                        "endpointUrl": "@{listCallbackUrl()}"
                      }
                    },
                    "filter": {
                      "includedEventTypes": [
                        "Microsoft.ServiceBus.ActiveMessagesAvailablePeriodicNotifications"
                      ]
                    }
                  }
                },
                "path": "/subscriptions/@{encodeURIComponent('c4022058-9e70-4f84-ad5b-1d689dd885ab')}/providers/@{encodeURIComponent('Microsoft.ServiceBus.Namespaces')}/resource/eventSubscriptions",
                "queries": {
                  "x-ms-api-version": "2017-09-15-preview"
                }
              },
              "splitOn": "@triggerBody()"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "servicebus": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'servicebus')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('servicebus_1_Connection_Name'))]",
                "connectionName": "[parameters('servicebus_1_Connection_Name')]",
                "serviceBusTopic": "[parameters('serviceBusTopic')]",
                "serviceBusTopicSubscriber": "[parameters('serviceBusTopicSubscriber')]",
                "serviceBusEventGridSystemTopicPath": "[parameters('serviceBusEventGridSystemTopicPath')]"
              },
              "azuretables_2": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'azuretables')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azuretables_1_Connection_Name'))]",
                "connectionName": "[parameters('azuretables_1_Connection_Name')]",
                "storageTable": "[parameters('storageTable')]"
              },
              "azureeventgrid_1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'azureeventgrid')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureeventgrid_1_Connection_Name'))]",
                "connectionName": "[parameters('azureeventgrid_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "name": "[parameters('LogicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('LogicAppLocation')]",
      "apiVersion": "2016-06-01",
      "tags": {
        "displayName": "LogicApp"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('servicebus_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('azuretables_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('azureeventgrid_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('azuretables_1_Connection_Name')]",
      "location": "[parameters('LogicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'azuretables')]"
        },
        "displayName": "[parameters('azuretables_1_Connection_DisplayName')]",
        "parameterValues": {
          "storageaccount": "[parameters('azuretables_1_storageaccount')]",
          "sharedkey": "[parameters('azuretables_1_sharedkey')]",
          "privacySetting": "[parameters('azuretables_1_privacySetting')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('servicebus_1_Connection_Name')]",
      "location": "[parameters('LogicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'servicebus')]"
        },
        "displayName": "[parameters('servicebus_1_Connection_DisplayName')]",
        "parameterValues": {
          "connectionString": "[parameters('servicebus_1_connectionString')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('azureeventgrid_1_Connection_Name')]",
      "location": "[parameters('LogicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'azureeventgrid')]"
        },
        "displayName": "[parameters('azureeventgrid_1_Connection_DisplayName')]"
      }
    }
  ],
  "outputs": {}
}