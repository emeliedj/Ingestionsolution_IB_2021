{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "uaecentral",
        "uaenorth",
        "southafricanorth",
        "southafricawest",
        "switzerlandnorth",
        "switzerlandwest",
        "germanynorth",
        "germanywestcentral",
        "norwayeast",
        "brazilsoutheast"
      ]
    },
    "servicebus_1_Connection_Name": {
      "type": "string",
      "defaultValue": "servicebus"
    },
    "servicebus_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "BusConnection"
    },
    "servicebus_1_connectionString": {
      "type": "securestring",
      "metadata": {
        "description": "Azure Service Bus Connection String"
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[parameters('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Initialize_variable": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ingestionArray",
                    "type": "array"
                  }
                ]
              },
              "runAfter": {}
            },
            "For_each": {
              "type": "Foreach",
              "foreach": "@triggerBody()?['timeSeries']",
              "actions": {
                "For_each_3": {
                  "type": "Foreach",
                  "foreach": "@items('For_each')?['parameters']",
                  "actions": {
                    "Condition": {
                      "type": "If",
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@items('For_each_3')?['name']",
                              "t"
                            ]
                          }
                        ]
                      },
                      "actions": {
                        "Compose": {
                          "type": "Compose",
                          "inputs": {
                            "Tid": "@items('For_each')['validTime']",
                            "°C": "@{items('For_each_3')['values'][0]}"
                          },
                          "runAfter": {}
                        },
                        "Append_to_array_variable": {
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "ingestionArray",
                            "value": "@outputs('Compose')"
                          },
                          "runAfter": {
                            "Compose": [
                              "Succeeded"
                            ]
                          }
                        }
                      },
                      "runAfter": {}
                    }
                  },
                  "runAfter": {}
                }
              },
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              }
            },
            "For_each_2": {
              "type": "Foreach",
              "foreach": "@triggerBody()?['timeSeries']",
              "actions": {
                "For_each_4": {
                  "type": "Foreach",
                  "foreach": "@items('For_each_2')?['parameters']",
                  "actions": {
                    "Condition_2": {
                      "type": "If",
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@items('For_each_4')?['name']",
                              "pcat"
                            ]
                          }
                        ]
                      },
                      "actions": {
                        "Compose_2": {
                          "type": "Compose",
                          "inputs": {
                            "Nederbörd": "@items('For_each_4')['values'][0]",
                            "Tid": "@items('For_each_2')['validTime']"
                          },
                          "runAfter": {}
                        },
                        "Append_to_array_variable_2": {
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "ingestionArray",
                            "value": "@outputs('Compose_2')"
                          },
                          "runAfter": {
                            "Compose_2": [
                              "Succeeded"
                            ]
                          }
                        }
                      },
                      "runAfter": {}
                    }
                  },
                  "runAfter": {}
                }
              },
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              }
            },
            "Compose_3": {
              "type": "Compose",
              "inputs": "@variables('ingestionArray')",
              "runAfter": {
                "For_each": [
                  "Succeeded"
                ],
                "For_each_2": [
                  "Succeeded"
                ]
              }
            },
            "Send_message": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['servicebus']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "ContentType": "application/json",
                  "Properties": "@outputs('Compose_3')"
                },
                "path": "/@{encodeURIComponent(encodeURIComponent('ibservicebustopic-t'))}/messages"
              },
              "runAfter": {
                "Compose_3": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "properties": {
                    "approvedTime": {
                      "type": "string"
                    },
                    "geometry": {
                      "properties": {
                        "coordinates": {
                          "items": {
                            "items": {
                              "type": "number"
                            },
                            "type": "array"
                          },
                          "type": "array"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "referenceTime": {
                      "type": "string"
                    },
                    "timeSeries": {
                      "items": {
                        "properties": {
                          "parameters": {
                            "items": {
                              "properties": {
                                "level": {
                                  "type": "number"
                                },
                                "levelType": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "unit": {
                                  "type": "string"
                                },
                                "values": {
                                  "items": {
                                    "type": "number"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "name",
                                "levelType",
                                "level",
                                "unit",
                                "values"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "validTime": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "validTime",
                          "parameters"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "operationOptions": "EnableSchemaValidation"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "servicebus": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'servicebus')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('servicebus_1_Connection_Name'))]",
                "connectionName": "[parameters('servicebus_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('servicebus_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('servicebus_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'servicebus')]"
        },
        "displayName": "[parameters('servicebus_1_Connection_DisplayName')]",
        "parameterValues": {
          "connectionString": "[parameters('servicebus_1_connectionString')]"
        }
      }
    }
  ],
  "outputs": {}
}